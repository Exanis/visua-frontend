// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VisuaToolbar /> should render VisuaToolbar properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VisuaToolbar
    classes={Object {}}
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    user={
        Object {
            "info": Object {},
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(AppBar)
          position="sticky"
>
          <WithStyles(Toolbar)>
                    <WithStyles(IconButton)
                              aria-label="Menu"
                              className={undefined}
                              color="inherit"
                              onClick={[Function]}
                    >
                              <pure(Menu) />
                    </WithStyles(IconButton)>
                    <WithStyles(Typography)
                              className={undefined}
                              color="inherit"
                              variant="title"
                    >
                              <FormattedMessage
                                        defaultMessage="Visua"
                                        id="toolbar.main.title"
                                        values={Object {}}
                              />
                    </WithStyles(Typography)>
                    <WithStyles(Typography)
                              color="inherit"
                              variant="subheading"
                    >
                               
                    </WithStyles(Typography)>
          </WithStyles(Toolbar)>
</WithStyles(AppBar)>,
        <div
          className={undefined}
>
          <WithStyles(Drawer)
                    classes={
                              Object {
                                        "paper": "",
                                      }
                    }
                    open={undefined}
                    variant="permanent"
          >
                    <WithStyles(List)>
                              <Link
                                        replace={false}
                                        to="/home"
                              >
                                        <WithStyles(ListItem)
                                                  button={true}
                                        >
                                                  <WithStyles(ListItemIcon)>
                                                            <pure(Home) />
                                                  </WithStyles(ListItemIcon)>
                                                  <WithStyles(ListItemText)
                                                            primary="toolbar.menu.home"
                                                  />
                                        </WithStyles(ListItem)>
                              </Link>
                    </WithStyles(List)>
                    <WithStyles(Divider) />
                    <WithStyles(List)>
                              <Link
                                        replace={false}
                                        to="/profile"
                              >
                                        <WithStyles(ListItem)
                                                  button={true}
                                        >
                                                  <WithStyles(ListItemIcon)>
                                                            <pure(AccountCircle) />
                                                  </WithStyles(ListItemIcon)>
                                                  <WithStyles(ListItemText)
                                                            primary="toolbar.menu.profile"
                                                  />
                                        </WithStyles(ListItem)>
                              </Link>
                              <WithStyles(ListItem)
                                        button={true}
                                        onClick={undefined}
                              >
                                        <WithStyles(ListItemIcon)>
                                                  <pure(ExitToApp) />
                                        </WithStyles(ListItemIcon)>
                                        <WithStyles(ListItemText)
                                                  primary="toolbar.menu.logout"
                                        />
                              </WithStyles(ListItem)>
                    </WithStyles(List)>
          </WithStyles(Drawer)>
          <div
                    className=""
          />
</div>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Toolbar)>
            <WithStyles(IconButton)
                        aria-label="Menu"
                        className={undefined}
                        color="inherit"
                        onClick={[Function]}
            >
                        <pure(Menu) />
            </WithStyles(IconButton)>
            <WithStyles(Typography)
                        className={undefined}
                        color="inherit"
                        variant="title"
            >
                        <FormattedMessage
                                    defaultMessage="Visua"
                                    id="toolbar.main.title"
                                    values={Object {}}
                        />
            </WithStyles(Typography)>
            <WithStyles(Typography)
                        color="inherit"
                        variant="subheading"
            >
                         
            </WithStyles(Typography)>
</WithStyles(Toolbar)>,
          "position": "sticky",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(IconButton)
                aria-label="Menu"
                className={undefined}
                color="inherit"
                onClick={[Function]}
>
                <pure(Menu) />
</WithStyles(IconButton)>,
              <WithStyles(Typography)
                className={undefined}
                color="inherit"
                variant="title"
>
                <FormattedMessage
                                defaultMessage="Visua"
                                id="toolbar.main.title"
                                values={Object {}}
                />
</WithStyles(Typography)>,
              <WithStyles(Typography)
                color="inherit"
                variant="subheading"
>
                 
</WithStyles(Typography)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "aria-label": "Menu",
                "children": <pure(Menu) />,
                "className": undefined,
                "color": "inherit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="Visua"
                  id="toolbar.main.title"
                  values={Object {}}
/>,
                "className": undefined,
                "color": "inherit",
                "variant": "title",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "Visua",
                  "id": "toolbar.main.title",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  undefined,
                  " ",
                  undefined,
                ],
                "color": "inherit",
                "variant": "subheading",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                " ",
                undefined,
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Drawer)
              classes={
                            Object {
                                          "paper": "",
                                        }
              }
              open={undefined}
              variant="permanent"
>
              <WithStyles(List)>
                            <Link
                                          replace={false}
                                          to="/home"
                            >
                                          <WithStyles(ListItem)
                                                        button={true}
                                          >
                                                        <WithStyles(ListItemIcon)>
                                                                      <pure(Home) />
                                                        </WithStyles(ListItemIcon)>
                                                        <WithStyles(ListItemText)
                                                                      primary="toolbar.menu.home"
                                                        />
                                          </WithStyles(ListItem)>
                            </Link>
              </WithStyles(List)>
              <WithStyles(Divider) />
              <WithStyles(List)>
                            <Link
                                          replace={false}
                                          to="/profile"
                            >
                                          <WithStyles(ListItem)
                                                        button={true}
                                          >
                                                        <WithStyles(ListItemIcon)>
                                                                      <pure(AccountCircle) />
                                                        </WithStyles(ListItemIcon)>
                                                        <WithStyles(ListItemText)
                                                                      primary="toolbar.menu.profile"
                                                        />
                                          </WithStyles(ListItem)>
                            </Link>
                            <WithStyles(ListItem)
                                          button={true}
                                          onClick={undefined}
                            >
                                          <WithStyles(ListItemIcon)>
                                                        <pure(ExitToApp) />
                                          </WithStyles(ListItemIcon)>
                                          <WithStyles(ListItemText)
                                                        primary="toolbar.menu.logout"
                                          />
                            </WithStyles(ListItem)>
              </WithStyles(List)>
</WithStyles(Drawer)>,
            <div
              className=""
/>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(List)>
                  <Link
                                    replace={false}
                                    to="/home"
                  >
                                    <WithStyles(ListItem)
                                                      button={true}
                                    >
                                                      <WithStyles(ListItemIcon)>
                                                                        <pure(Home) />
                                                      </WithStyles(ListItemIcon)>
                                                      <WithStyles(ListItemText)
                                                                        primary="toolbar.menu.home"
                                                      />
                                    </WithStyles(ListItem)>
                  </Link>
</WithStyles(List)>,
                <WithStyles(Divider) />,
                undefined,
                <WithStyles(List)>
                  <Link
                                    replace={false}
                                    to="/profile"
                  >
                                    <WithStyles(ListItem)
                                                      button={true}
                                    >
                                                      <WithStyles(ListItemIcon)>
                                                                        <pure(AccountCircle) />
                                                      </WithStyles(ListItemIcon)>
                                                      <WithStyles(ListItemText)
                                                                        primary="toolbar.menu.profile"
                                                      />
                                    </WithStyles(ListItem)>
                  </Link>
                  <WithStyles(ListItem)
                                    button={true}
                                    onClick={undefined}
                  >
                                    <WithStyles(ListItemIcon)>
                                                      <pure(ExitToApp) />
                                    </WithStyles(ListItemIcon)>
                                    <WithStyles(ListItemText)
                                                      primary="toolbar.menu.logout"
                                    />
                  </WithStyles(ListItem)>
</WithStyles(List)>,
              ],
              "classes": Object {
                "paper": "",
              },
              "open": undefined,
              "variant": "permanent",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Link
                    replace={false}
                    to="/home"
>
                    <WithStyles(ListItem)
                                        button={true}
                    >
                                        <WithStyles(ListItemIcon)>
                                                            <pure(Home) />
                                        </WithStyles(ListItemIcon)>
                                        <WithStyles(ListItemText)
                                                            primary="toolbar.menu.home"
                                        />
                    </WithStyles(ListItem)>
</Link>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <WithStyles(ListItem)
                      button={true}
>
                      <WithStyles(ListItemIcon)>
                                            <pure(Home) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                                            primary="toolbar.menu.home"
                      />
</WithStyles(ListItem)>,
                    "replace": false,
                    "to": "/home",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "button": true,
                      "children": Array [
                        <WithStyles(ListItemIcon)>
                          <pure(Home) />
</WithStyles(ListItemIcon)>,
                        <WithStyles(ListItemText)
                          primary="toolbar.menu.home"
/>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(Home) />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "primary": "toolbar.menu.home",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Link
                      replace={false}
                      to="/profile"
>
                      <WithStyles(ListItem)
                                            button={true}
                      >
                                            <WithStyles(ListItemIcon)>
                                                                  <pure(AccountCircle) />
                                            </WithStyles(ListItemIcon)>
                                            <WithStyles(ListItemText)
                                                                  primary="toolbar.menu.profile"
                                            />
                      </WithStyles(ListItem)>
</Link>,
                    <WithStyles(ListItem)
                      button={true}
                      onClick={undefined}
>
                      <WithStyles(ListItemIcon)>
                                            <pure(ExitToApp) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                                            primary="toolbar.menu.logout"
                      />
</WithStyles(ListItem)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <WithStyles(ListItem)
                        button={true}
>
                        <WithStyles(ListItemIcon)>
                                                <pure(AccountCircle) />
                        </WithStyles(ListItemIcon)>
                        <WithStyles(ListItemText)
                                                primary="toolbar.menu.profile"
                        />
</WithStyles(ListItem)>,
                      "replace": false,
                      "to": "/profile",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "button": true,
                        "children": Array [
                          <WithStyles(ListItemIcon)>
                            <pure(AccountCircle) />
</WithStyles(ListItemIcon)>,
                          <WithStyles(ListItemText)
                            primary="toolbar.menu.profile"
/>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <pure(AccountCircle) />,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "primary": "toolbar.menu.profile",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "button": true,
                      "children": Array [
                        <WithStyles(ListItemIcon)>
                          <pure(ExitToApp) />
</WithStyles(ListItemIcon)>,
                        <WithStyles(ListItemText)
                          primary="toolbar.menu.logout"
/>,
                      ],
                      "onClick": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(ExitToApp) />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "primary": "toolbar.menu.logout",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(AppBar)
            position="sticky"
>
            <WithStyles(Toolbar)>
                        <WithStyles(IconButton)
                                    aria-label="Menu"
                                    className={undefined}
                                    color="inherit"
                                    onClick={[Function]}
                        >
                                    <pure(Menu) />
                        </WithStyles(IconButton)>
                        <WithStyles(Typography)
                                    className={undefined}
                                    color="inherit"
                                    variant="title"
                        >
                                    <FormattedMessage
                                                defaultMessage="Visua"
                                                id="toolbar.main.title"
                                                values={Object {}}
                                    />
                        </WithStyles(Typography)>
                        <WithStyles(Typography)
                                    color="inherit"
                                    variant="subheading"
                        >
                                     
                        </WithStyles(Typography)>
            </WithStyles(Toolbar)>
</WithStyles(AppBar)>,
          <div
            className={undefined}
>
            <WithStyles(Drawer)
                        classes={
                                    Object {
                                                "paper": "",
                                              }
                        }
                        open={undefined}
                        variant="permanent"
            >
                        <WithStyles(List)>
                                    <Link
                                                replace={false}
                                                to="/home"
                                    >
                                                <WithStyles(ListItem)
                                                            button={true}
                                                >
                                                            <WithStyles(ListItemIcon)>
                                                                        <pure(Home) />
                                                            </WithStyles(ListItemIcon)>
                                                            <WithStyles(ListItemText)
                                                                        primary="toolbar.menu.home"
                                                            />
                                                </WithStyles(ListItem)>
                                    </Link>
                        </WithStyles(List)>
                        <WithStyles(Divider) />
                        <WithStyles(List)>
                                    <Link
                                                replace={false}
                                                to="/profile"
                                    >
                                                <WithStyles(ListItem)
                                                            button={true}
                                                >
                                                            <WithStyles(ListItemIcon)>
                                                                        <pure(AccountCircle) />
                                                            </WithStyles(ListItemIcon)>
                                                            <WithStyles(ListItemText)
                                                                        primary="toolbar.menu.profile"
                                                            />
                                                </WithStyles(ListItem)>
                                    </Link>
                                    <WithStyles(ListItem)
                                                button={true}
                                                onClick={undefined}
                                    >
                                                <WithStyles(ListItemIcon)>
                                                            <pure(ExitToApp) />
                                                </WithStyles(ListItemIcon)>
                                                <WithStyles(ListItemText)
                                                            primary="toolbar.menu.logout"
                                                />
                                    </WithStyles(ListItem)>
                        </WithStyles(List)>
            </WithStyles(Drawer)>
            <div
                        className=""
            />
</div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Toolbar)>
              <WithStyles(IconButton)
                            aria-label="Menu"
                            className={undefined}
                            color="inherit"
                            onClick={[Function]}
              >
                            <pure(Menu) />
              </WithStyles(IconButton)>
              <WithStyles(Typography)
                            className={undefined}
                            color="inherit"
                            variant="title"
              >
                            <FormattedMessage
                                          defaultMessage="Visua"
                                          id="toolbar.main.title"
                                          values={Object {}}
                            />
              </WithStyles(Typography)>
              <WithStyles(Typography)
                            color="inherit"
                            variant="subheading"
              >
                             
              </WithStyles(Typography)>
</WithStyles(Toolbar)>,
            "position": "sticky",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(IconButton)
                  aria-label="Menu"
                  className={undefined}
                  color="inherit"
                  onClick={[Function]}
>
                  <pure(Menu) />
</WithStyles(IconButton)>,
                <WithStyles(Typography)
                  className={undefined}
                  color="inherit"
                  variant="title"
>
                  <FormattedMessage
                                    defaultMessage="Visua"
                                    id="toolbar.main.title"
                                    values={Object {}}
                  />
</WithStyles(Typography)>,
                <WithStyles(Typography)
                  color="inherit"
                  variant="subheading"
>
                   
</WithStyles(Typography)>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "aria-label": "Menu",
                  "children": <pure(Menu) />,
                  "className": undefined,
                  "color": "inherit",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <FormattedMessage
                    defaultMessage="Visua"
                    id="toolbar.main.title"
                    values={Object {}}
/>,
                  "className": undefined,
                  "color": "inherit",
                  "variant": "title",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Visua",
                    "id": "toolbar.main.title",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    undefined,
                    " ",
                    undefined,
                  ],
                  "color": "inherit",
                  "variant": "subheading",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  " ",
                  undefined,
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Drawer)
                classes={
                                Object {
                                                "paper": "",
                                              }
                }
                open={undefined}
                variant="permanent"
>
                <WithStyles(List)>
                                <Link
                                                replace={false}
                                                to="/home"
                                >
                                                <WithStyles(ListItem)
                                                                button={true}
                                                >
                                                                <WithStyles(ListItemIcon)>
                                                                                <pure(Home) />
                                                                </WithStyles(ListItemIcon)>
                                                                <WithStyles(ListItemText)
                                                                                primary="toolbar.menu.home"
                                                                />
                                                </WithStyles(ListItem)>
                                </Link>
                </WithStyles(List)>
                <WithStyles(Divider) />
                <WithStyles(List)>
                                <Link
                                                replace={false}
                                                to="/profile"
                                >
                                                <WithStyles(ListItem)
                                                                button={true}
                                                >
                                                                <WithStyles(ListItemIcon)>
                                                                                <pure(AccountCircle) />
                                                                </WithStyles(ListItemIcon)>
                                                                <WithStyles(ListItemText)
                                                                                primary="toolbar.menu.profile"
                                                                />
                                                </WithStyles(ListItem)>
                                </Link>
                                <WithStyles(ListItem)
                                                button={true}
                                                onClick={undefined}
                                >
                                                <WithStyles(ListItemIcon)>
                                                                <pure(ExitToApp) />
                                                </WithStyles(ListItemIcon)>
                                                <WithStyles(ListItemText)
                                                                primary="toolbar.menu.logout"
                                                />
                                </WithStyles(ListItem)>
                </WithStyles(List)>
</WithStyles(Drawer)>,
              <div
                className=""
/>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(List)>
                    <Link
                                        replace={false}
                                        to="/home"
                    >
                                        <WithStyles(ListItem)
                                                            button={true}
                                        >
                                                            <WithStyles(ListItemIcon)>
                                                                                <pure(Home) />
                                                            </WithStyles(ListItemIcon)>
                                                            <WithStyles(ListItemText)
                                                                                primary="toolbar.menu.home"
                                                            />
                                        </WithStyles(ListItem)>
                    </Link>
</WithStyles(List)>,
                  <WithStyles(Divider) />,
                  undefined,
                  <WithStyles(List)>
                    <Link
                                        replace={false}
                                        to="/profile"
                    >
                                        <WithStyles(ListItem)
                                                            button={true}
                                        >
                                                            <WithStyles(ListItemIcon)>
                                                                                <pure(AccountCircle) />
                                                            </WithStyles(ListItemIcon)>
                                                            <WithStyles(ListItemText)
                                                                                primary="toolbar.menu.profile"
                                                            />
                                        </WithStyles(ListItem)>
                    </Link>
                    <WithStyles(ListItem)
                                        button={true}
                                        onClick={undefined}
                    >
                                        <WithStyles(ListItemIcon)>
                                                            <pure(ExitToApp) />
                                        </WithStyles(ListItemIcon)>
                                        <WithStyles(ListItemText)
                                                            primary="toolbar.menu.logout"
                                        />
                    </WithStyles(ListItem)>
</WithStyles(List)>,
                ],
                "classes": Object {
                  "paper": "",
                },
                "open": undefined,
                "variant": "permanent",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Link
                      replace={false}
                      to="/home"
>
                      <WithStyles(ListItem)
                                            button={true}
                      >
                                            <WithStyles(ListItemIcon)>
                                                                  <pure(Home) />
                                            </WithStyles(ListItemIcon)>
                                            <WithStyles(ListItemText)
                                                                  primary="toolbar.menu.home"
                                            />
                      </WithStyles(ListItem)>
</Link>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <WithStyles(ListItem)
                        button={true}
>
                        <WithStyles(ListItemIcon)>
                                                <pure(Home) />
                        </WithStyles(ListItemIcon)>
                        <WithStyles(ListItemText)
                                                primary="toolbar.menu.home"
                        />
</WithStyles(ListItem)>,
                      "replace": false,
                      "to": "/home",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "button": true,
                        "children": Array [
                          <WithStyles(ListItemIcon)>
                            <pure(Home) />
</WithStyles(ListItemIcon)>,
                          <WithStyles(ListItemText)
                            primary="toolbar.menu.home"
/>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <pure(Home) />,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "primary": "toolbar.menu.home",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <Link
                        replace={false}
                        to="/profile"
>
                        <WithStyles(ListItem)
                                                button={true}
                        >
                                                <WithStyles(ListItemIcon)>
                                                                        <pure(AccountCircle) />
                                                </WithStyles(ListItemIcon)>
                                                <WithStyles(ListItemText)
                                                                        primary="toolbar.menu.profile"
                                                />
                        </WithStyles(ListItem)>
</Link>,
                      <WithStyles(ListItem)
                        button={true}
                        onClick={undefined}
>
                        <WithStyles(ListItemIcon)>
                                                <pure(ExitToApp) />
                        </WithStyles(ListItemIcon)>
                        <WithStyles(ListItemText)
                                                primary="toolbar.menu.logout"
                        />
</WithStyles(ListItem)>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <WithStyles(ListItem)
                          button={true}
>
                          <WithStyles(ListItemIcon)>
                                                    <pure(AccountCircle) />
                          </WithStyles(ListItemIcon)>
                          <WithStyles(ListItemText)
                                                    primary="toolbar.menu.profile"
                          />
</WithStyles(ListItem)>,
                        "replace": false,
                        "to": "/profile",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "button": true,
                          "children": Array [
                            <WithStyles(ListItemIcon)>
                              <pure(AccountCircle) />
</WithStyles(ListItemIcon)>,
                            <WithStyles(ListItemText)
                              primary="toolbar.menu.profile"
/>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": <pure(AccountCircle) />,
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "primary": "toolbar.menu.profile",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "button": true,
                        "children": Array [
                          <WithStyles(ListItemIcon)>
                            <pure(ExitToApp) />
</WithStyles(ListItemIcon)>,
                          <WithStyles(ListItemText)
                            primary="toolbar.menu.logout"
/>,
                        ],
                        "onClick": undefined,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "children": <pure(ExitToApp) />,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {},
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "primary": "toolbar.menu.logout",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
