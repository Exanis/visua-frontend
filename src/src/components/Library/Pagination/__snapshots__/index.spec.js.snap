// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Pagination /> should render Pagination properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PaginationBase
    classes={
        Object {
            "active": "style-active",
            "bordered": "style-bordered",
            "horizontal": "style-horizontal",
          }
    }
    count={145}
    onClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    className="style-bordered style-active"
                    onClick={[Function]}
                    variant="button"
          >
                    1
          </WithStyles(Typography)>
</div>,
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    className="style-bordered"
                    onClick={[Function]}
                    variant="button"
          >
                    2
          </WithStyles(Typography)>
</div>,
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    variant="body2"
          >
                    ...
          </WithStyles(Typography)>
          <WithStyles(Typography)
                    className="style-bordered"
                    onClick={[Function]}
                    variant="button"
          >
                    10
          </WithStyles(Typography)>
</div>,
      ],
      "className": "style-horizontal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Typography)
              className="style-bordered style-active"
              onClick={[Function]}
              variant="button"
>
              1
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 1,
              "className": "style-bordered style-active",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 1,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Typography)
              className="style-bordered"
              onClick={[Function]}
              variant="button"
>
              2
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 2,
              "className": "style-bordered",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 2,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "10",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              variant="body2"
>
              ...
</WithStyles(Typography)>,
            <WithStyles(Typography)
              className="style-bordered"
              onClick={[Function]}
              variant="button"
>
              10
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "...",
              "variant": "body2",
            },
            "ref": null,
            "rendered": "...",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 10,
              "className": "style-bordered",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 10,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        className="style-bordered style-active"
                        onClick={[Function]}
                        variant="button"
            >
                        1
            </WithStyles(Typography)>
</div>,
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        className="style-bordered"
                        onClick={[Function]}
                        variant="button"
            >
                        2
            </WithStyles(Typography)>
</div>,
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        variant="body2"
            >
                        ...
            </WithStyles(Typography)>
            <WithStyles(Typography)
                        className="style-bordered"
                        onClick={[Function]}
                        variant="button"
            >
                        10
            </WithStyles(Typography)>
</div>,
        ],
        "className": "style-horizontal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Typography)
                className="style-bordered style-active"
                onClick={[Function]}
                variant="button"
>
                1
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 1,
                "className": "style-bordered style-active",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 1,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Typography)
                className="style-bordered"
                onClick={[Function]}
                variant="button"
>
                2
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 2,
                "className": "style-bordered",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 2,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "10",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                variant="body2"
>
                ...
</WithStyles(Typography)>,
              <WithStyles(Typography)
                className="style-bordered"
                onClick={[Function]}
                variant="button"
>
                10
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "...",
                "variant": "body2",
              },
              "ref": null,
              "rendered": "...",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 10,
                "className": "style-bordered",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 10,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<Pagination /> should render Pagination properly when pagesize is specified 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PaginationBase
    classes={
        Object {
            "active": "style-active",
            "bordered": "style-bordered",
            "horizontal": "style-horizontal",
          }
    }
    count={145}
    onClick={[Function]}
    pageSize={3}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    className="style-bordered style-active"
                    onClick={[Function]}
                    variant="button"
          >
                    1
          </WithStyles(Typography)>
</div>,
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    className="style-bordered"
                    onClick={[Function]}
                    variant="button"
          >
                    2
          </WithStyles(Typography)>
</div>,
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    variant="body2"
          >
                    ...
          </WithStyles(Typography)>
          <WithStyles(Typography)
                    className="style-bordered"
                    onClick={[Function]}
                    variant="button"
          >
                    49
          </WithStyles(Typography)>
</div>,
      ],
      "className": "style-horizontal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Typography)
              className="style-bordered style-active"
              onClick={[Function]}
              variant="button"
>
              1
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 1,
              "className": "style-bordered style-active",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 1,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Typography)
              className="style-bordered"
              onClick={[Function]}
              variant="button"
>
              2
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 2,
              "className": "style-bordered",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 2,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "49",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              variant="body2"
>
              ...
</WithStyles(Typography)>,
            <WithStyles(Typography)
              className="style-bordered"
              onClick={[Function]}
              variant="button"
>
              49
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "...",
              "variant": "body2",
            },
            "ref": null,
            "rendered": "...",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 49,
              "className": "style-bordered",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 49,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        className="style-bordered style-active"
                        onClick={[Function]}
                        variant="button"
            >
                        1
            </WithStyles(Typography)>
</div>,
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        className="style-bordered"
                        onClick={[Function]}
                        variant="button"
            >
                        2
            </WithStyles(Typography)>
</div>,
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        variant="body2"
            >
                        ...
            </WithStyles(Typography)>
            <WithStyles(Typography)
                        className="style-bordered"
                        onClick={[Function]}
                        variant="button"
            >
                        49
            </WithStyles(Typography)>
</div>,
        ],
        "className": "style-horizontal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Typography)
                className="style-bordered style-active"
                onClick={[Function]}
                variant="button"
>
                1
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 1,
                "className": "style-bordered style-active",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 1,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Typography)
                className="style-bordered"
                onClick={[Function]}
                variant="button"
>
                2
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 2,
                "className": "style-bordered",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 2,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "49",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                variant="body2"
>
                ...
</WithStyles(Typography)>,
              <WithStyles(Typography)
                className="style-bordered"
                onClick={[Function]}
                variant="button"
>
                49
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "...",
                "variant": "body2",
              },
              "ref": null,
              "rendered": "...",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 49,
                "className": "style-bordered",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 49,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<Pagination /> should render Pagination properly when there is no items 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PaginationBase
    classes={
        Object {
            "active": "style-active",
            "bordered": "style-bordered",
            "horizontal": "style-horizontal",
          }
    }
    count={0}
    onClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): false,
  Symbol(enzyme.__nodes__): Array [
    false,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<Pagination /> should render Pagination properly when there is only one page 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PaginationBase
    classes={
        Object {
            "active": "style-active",
            "bordered": "style-bordered",
            "horizontal": "style-horizontal",
          }
    }
    count={29}
    onClick={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    className="style-bordered style-active"
                    onClick={[Function]}
                    variant="button"
          >
                    1
          </WithStyles(Typography)>
</div>,
        <div
          className="style-horizontal"
>
          <WithStyles(Typography)
                    className="style-bordered"
                    onClick={[Function]}
                    variant="button"
          >
                    2
          </WithStyles(Typography)>
</div>,
      ],
      "className": "style-horizontal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Typography)
              className="style-bordered style-active"
              onClick={[Function]}
              variant="button"
>
              1
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 1,
              "className": "style-bordered style-active",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 1,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <WithStyles(Typography)
              className="style-bordered"
              onClick={[Function]}
              variant="button"
>
              2
</WithStyles(Typography)>,
          ],
          "className": "style-horizontal",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": 2,
              "className": "style-bordered",
              "onClick": [Function],
              "variant": "button",
            },
            "ref": null,
            "rendered": 2,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        className="style-bordered style-active"
                        onClick={[Function]}
                        variant="button"
            >
                        1
            </WithStyles(Typography)>
</div>,
          <div
            className="style-horizontal"
>
            <WithStyles(Typography)
                        className="style-bordered"
                        onClick={[Function]}
                        variant="button"
            >
                        2
            </WithStyles(Typography)>
</div>,
        ],
        "className": "style-horizontal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Typography)
                className="style-bordered style-active"
                onClick={[Function]}
                variant="button"
>
                1
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 1,
                "className": "style-bordered style-active",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 1,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <WithStyles(Typography)
                className="style-bordered"
                onClick={[Function]}
                variant="button"
>
                2
</WithStyles(Typography)>,
            ],
            "className": "style-horizontal",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": 2,
                "className": "style-bordered",
                "onClick": [Function],
                "variant": "button",
              },
              "ref": null,
              "rendered": 2,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
