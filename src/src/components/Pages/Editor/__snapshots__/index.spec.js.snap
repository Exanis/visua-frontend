// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditorPage /> should render EditorPage properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditorPage
    block={Object {}}
    blockActions={
        Object {
            "getAllBlocks": [Function],
          }
    }
    classes={Object {}}
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    match={
        Object {
            "params": Object {},
          }
    }
    navigationActions={Object {}}
    pipeline={
        Object {
            "modelUpdate": Object {
              "haveResult": false,
              "success": false,
            },
            "retrieve": Object {
              "haveResult": true,
              "pipeline": Object {},
              "success": true,
            },
          }
    }
    pipelineActions={
        Object {
            "setCurrentPipeline": [Function],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(Button)
          className={undefined}
          color="primary"
          onClick={[Function]}
          variant="fab"
>
          <pure(Add) />
</WithStyles(Button)>,
        <VisuaSnackbar
          open={false}
          variant="error"
>
          <FormattedMessage
                    defaultMessage="Error while saving pipeline; please try again (are you still logged in?)"
                    id="pipeline.model.update.error"
                    values={Object {}}
          />
</VisuaSnackbar>,
        <VisuaSnackbar
          open={false}
          variant="success"
>
          <FormattedMessage
                    defaultMessage="Pipeline saved."
                    id="pipeline.model.update.success"
                    values={Object {}}
          />
</VisuaSnackbar>,
        <WithStyles(Drawer)
          anchor="right"
          onClose={[Function]}
          open={false}
>
          <div
                    className={undefined}
          >
                    <div
                              className={undefined}
                    >
                              <WithStyles(Typography)
                                        variant="title"
                              >
                                        <FormattedMessage
                                                  defaultMessage="Block settings"
                                                  id="pipeline.model.settings.title"
                                                  values={Object {}}
                                        />
                              </WithStyles(Typography)>
                              <br />
                    </div>
          </div>
</WithStyles(Drawer)>,
        <WithStyles(Drawer)
          anchor="right"
          onClose={[Function]}
          open={false}
>
          <div
                    className={undefined}
          >
                    <WithStyles(ItemsListBase)
                              count={undefined}
                              itemToPrimary={[Function]}
                              itemToSecondary={[Function]}
                              items={undefined}
                              loadItems={undefined}
                              loaded={undefined}
                              onClick={[Function]}
                              title=""
                    />
          </div>
</WithStyles(Drawer)>,
        <div
          className={undefined}
>
          <div
                    className={undefined}
          >
                    <WithStyles(Typography)
                              className={undefined}
                              variant="title"
                    />
                    <WithStyles(Button)
                              color="primary"
                              onClick={[Function]}
                              variant="contained"
                    >
                              <pure(Save)
                                        className={undefined}
                              />
                              <FormattedMessage
                                        defaultMessage="Save"
                                        id="editor.save"
                                        values={Object {}}
                              />
                    </WithStyles(Button)>
          </div>
          <DiagramWidget
                    actionStoppedFiring={[Function]}
                    allowCanvasTranslation={true}
                    allowCanvasZoom={true}
                    allowLooseLinks={true}
                    className={undefined}
                    deleteKeys={
                              Array [
                                        46,
                                        8,
                                      ]
                    }
                    diagramEngine={
                              DiagramEngine {
                                        "calculateMatrixDimensions": [Function],
                                        "canvas": null,
                                        "canvasMatrix": Array [],
                                        "diagramModel": DiagramModel {
                                          "gridSize": 0,
                                          "id": "2b29bdc6-ede2-4a45-b4e9-4c60c92ff7a1",
                                          "links": Object {},
                                          "listeners": Object {
                                            "97361d77-59d4-4081-b3f8-791c290a96f6": Object {
                                              "linksUpdated": [Function],
                                            },
                                            "df1260e5-f839-45ae-8652-b34c4d6f1dac": Object {
                                              "nodesUpdated": [Function],
                                            },
                                          },
                                          "locked": false,
                                          "nodes": Object {},
                                          "offsetX": 0,
                                          "offsetY": 0,
                                          "rendered": false,
                                          "zoom": 100,
                                        },
                                        "hAdjustmentFactor": 0,
                                        "id": "90150074-b49e-4417-b3e1-a2886f3f3e4d",
                                        "labelFactories": Object {
                                          "default": DefaultLabelFactory {
                                            "type": "default",
                                          },
                                        },
                                        "linkFactories": Object {
                                          "default": DefaultLinkFactory {
                                            "type": "default",
                                          },
                                        },
                                        "linksThatHaveInitiallyRendered": Object {},
                                        "listeners": Object {},
                                        "locked": false,
                                        "markMatrixPoint": [Function],
                                        "markNodes": [Function],
                                        "markPorts": [Function],
                                        "nodeFactories": Object {
                                          "default": DefaultNodeFactory {
                                            "type": "default",
                                          },
                                        },
                                        "nodesRendered": false,
                                        "paintableWidgets": null,
                                        "portFactories": Object {
                                          "default": DefaultPortFactory {
                                            "type": "default",
                                          },
                                        },
                                        "routingMatrix": Array [],
                                        "vAdjustmentFactor": 0,
                                      }
                    }
                    inverseZoom={false}
                    maxNumberPointsPerLink={0}
                    smartRouting={false}
          />
</div>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <pure(Add) />,
          "className": undefined,
          "color": "primary",
          "onClick": [Function],
          "variant": "fab",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <FormattedMessage
            defaultMessage="Error while saving pipeline; please try again (are you still logged in?)"
            id="pipeline.model.update.error"
            values={Object {}}
/>,
          "open": false,
          "variant": "error",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultMessage": "Error while saving pipeline; please try again (are you still logged in?)",
            "id": "pipeline.model.update.error",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <FormattedMessage
            defaultMessage="Pipeline saved."
            id="pipeline.model.update.success"
            values={Object {}}
/>,
          "open": false,
          "variant": "success",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultMessage": "Pipeline saved.",
            "id": "pipeline.model.update.success",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "anchor": "right",
          "children": <div
            className={undefined}
>
            <div
                        className={undefined}
            >
                        <WithStyles(Typography)
                                    variant="title"
                        >
                                    <FormattedMessage
                                                defaultMessage="Block settings"
                                                id="pipeline.model.settings.title"
                                                values={Object {}}
                                    />
                        </WithStyles(Typography)>
                        <br />
            </div>
</div>,
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className={undefined}
>
              <WithStyles(Typography)
                            variant="title"
              >
                            <FormattedMessage
                                          defaultMessage="Block settings"
                                          id="pipeline.model.settings.title"
                                          values={Object {}}
                            />
              </WithStyles(Typography)>
              <br />
</div>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(Typography)
                  variant="title"
>
                  <FormattedMessage
                                    defaultMessage="Block settings"
                                    id="pipeline.model.settings.title"
                                    values={Object {}}
                  />
</WithStyles(Typography)>,
                <br />,
                false,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <FormattedMessage
                    defaultMessage="Block settings"
                    id="pipeline.model.settings.title"
                    values={Object {}}
/>,
                  "variant": "title",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "defaultMessage": "Block settings",
                    "id": "pipeline.model.settings.title",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              false,
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "anchor": "right",
          "children": <div
            className={undefined}
>
            <WithStyles(ItemsListBase)
                        count={undefined}
                        itemToPrimary={[Function]}
                        itemToSecondary={[Function]}
                        items={undefined}
                        loadItems={undefined}
                        loaded={undefined}
                        onClick={[Function]}
                        title=""
            />
</div>,
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(ItemsListBase)
              count={undefined}
              itemToPrimary={[Function]}
              itemToSecondary={[Function]}
              items={undefined}
              loadItems={undefined}
              loaded={undefined}
              onClick={[Function]}
              title=""
/>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "count": undefined,
              "itemToPrimary": [Function],
              "itemToSecondary": [Function],
              "items": undefined,
              "loadItems": undefined,
              "loaded": undefined,
              "onClick": [Function],
              "title": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className={undefined}
>
              <WithStyles(Typography)
                            className={undefined}
                            variant="title"
              />
              <WithStyles(Button)
                            color="primary"
                            onClick={[Function]}
                            variant="contained"
              >
                            <pure(Save)
                                          className={undefined}
                            />
                            <FormattedMessage
                                          defaultMessage="Save"
                                          id="editor.save"
                                          values={Object {}}
                            />
              </WithStyles(Button)>
</div>,
            <DiagramWidget
              actionStoppedFiring={[Function]}
              allowCanvasTranslation={true}
              allowCanvasZoom={true}
              allowLooseLinks={true}
              className={undefined}
              deleteKeys={
                            Array [
                                          46,
                                          8,
                                        ]
              }
              diagramEngine={
                            DiagramEngine {
                                          "calculateMatrixDimensions": [Function],
                                          "canvas": null,
                                          "canvasMatrix": Array [],
                                          "diagramModel": DiagramModel {
                                            "gridSize": 0,
                                            "id": "2b29bdc6-ede2-4a45-b4e9-4c60c92ff7a1",
                                            "links": Object {},
                                            "listeners": Object {
                                              "97361d77-59d4-4081-b3f8-791c290a96f6": Object {
                                                "linksUpdated": [Function],
                                              },
                                              "df1260e5-f839-45ae-8652-b34c4d6f1dac": Object {
                                                "nodesUpdated": [Function],
                                              },
                                            },
                                            "locked": false,
                                            "nodes": Object {},
                                            "offsetX": 0,
                                            "offsetY": 0,
                                            "rendered": false,
                                            "zoom": 100,
                                          },
                                          "hAdjustmentFactor": 0,
                                          "id": "90150074-b49e-4417-b3e1-a2886f3f3e4d",
                                          "labelFactories": Object {
                                            "default": DefaultLabelFactory {
                                              "type": "default",
                                            },
                                          },
                                          "linkFactories": Object {
                                            "default": DefaultLinkFactory {
                                              "type": "default",
                                            },
                                          },
                                          "linksThatHaveInitiallyRendered": Object {},
                                          "listeners": Object {},
                                          "locked": false,
                                          "markMatrixPoint": [Function],
                                          "markNodes": [Function],
                                          "markPorts": [Function],
                                          "nodeFactories": Object {
                                            "default": DefaultNodeFactory {
                                              "type": "default",
                                            },
                                          },
                                          "nodesRendered": false,
                                          "paintableWidgets": null,
                                          "portFactories": Object {
                                            "default": DefaultPortFactory {
                                              "type": "default",
                                            },
                                          },
                                          "routingMatrix": Array [],
                                          "vAdjustmentFactor": 0,
                                        }
              }
              inverseZoom={false}
              maxNumberPointsPerLink={0}
              smartRouting={false}
/>,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <WithStyles(Typography)
                  className={undefined}
                  variant="title"
/>,
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
>
                  <pure(Save)
                                    className={undefined}
                  />
                  <FormattedMessage
                                    defaultMessage="Save"
                                    id="editor.save"
                                    values={Object {}}
                  />
</WithStyles(Button)>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "className": undefined,
                  "variant": "title",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <pure(Save)
                      className={undefined}
/>,
                    <FormattedMessage
                      defaultMessage="Save"
                      id="editor.save"
                      values={Object {}}
/>,
                  ],
                  "color": "primary",
                  "onClick": [Function],
                  "variant": "contained",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultMessage": "Save",
                      "id": "editor.save",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "actionStoppedFiring": [Function],
              "allowCanvasTranslation": true,
              "allowCanvasZoom": true,
              "allowLooseLinks": true,
              "className": undefined,
              "deleteKeys": Array [
                46,
                8,
              ],
              "diagramEngine": DiagramEngine {
                "calculateMatrixDimensions": [Function],
                "canvas": null,
                "canvasMatrix": Array [],
                "diagramModel": DiagramModel {
                  "gridSize": 0,
                  "id": "2b29bdc6-ede2-4a45-b4e9-4c60c92ff7a1",
                  "links": Object {},
                  "listeners": Object {
                    "97361d77-59d4-4081-b3f8-791c290a96f6": Object {
                      "linksUpdated": [Function],
                    },
                    "df1260e5-f839-45ae-8652-b34c4d6f1dac": Object {
                      "nodesUpdated": [Function],
                    },
                  },
                  "locked": false,
                  "nodes": Object {},
                  "offsetX": 0,
                  "offsetY": 0,
                  "rendered": false,
                  "zoom": 100,
                },
                "hAdjustmentFactor": 0,
                "id": "90150074-b49e-4417-b3e1-a2886f3f3e4d",
                "labelFactories": Object {
                  "default": DefaultLabelFactory {
                    "type": "default",
                  },
                },
                "linkFactories": Object {
                  "default": DefaultLinkFactory {
                    "type": "default",
                  },
                },
                "linksThatHaveInitiallyRendered": Object {},
                "listeners": Object {},
                "locked": false,
                "markMatrixPoint": [Function],
                "markNodes": [Function],
                "markPorts": [Function],
                "nodeFactories": Object {
                  "default": DefaultNodeFactory {
                    "type": "default",
                  },
                },
                "nodesRendered": false,
                "paintableWidgets": null,
                "portFactories": Object {
                  "default": DefaultPortFactory {
                    "type": "default",
                  },
                },
                "routingMatrix": Array [],
                "vAdjustmentFactor": 0,
              },
              "inverseZoom": false,
              "maxNumberPointsPerLink": 0,
              "smartRouting": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(Button)
            className={undefined}
            color="primary"
            onClick={[Function]}
            variant="fab"
>
            <pure(Add) />
</WithStyles(Button)>,
          <VisuaSnackbar
            open={false}
            variant="error"
>
            <FormattedMessage
                        defaultMessage="Error while saving pipeline; please try again (are you still logged in?)"
                        id="pipeline.model.update.error"
                        values={Object {}}
            />
</VisuaSnackbar>,
          <VisuaSnackbar
            open={false}
            variant="success"
>
            <FormattedMessage
                        defaultMessage="Pipeline saved."
                        id="pipeline.model.update.success"
                        values={Object {}}
            />
</VisuaSnackbar>,
          <WithStyles(Drawer)
            anchor="right"
            onClose={[Function]}
            open={false}
>
            <div
                        className={undefined}
            >
                        <div
                                    className={undefined}
                        >
                                    <WithStyles(Typography)
                                                variant="title"
                                    >
                                                <FormattedMessage
                                                            defaultMessage="Block settings"
                                                            id="pipeline.model.settings.title"
                                                            values={Object {}}
                                                />
                                    </WithStyles(Typography)>
                                    <br />
                        </div>
            </div>
</WithStyles(Drawer)>,
          <WithStyles(Drawer)
            anchor="right"
            onClose={[Function]}
            open={false}
>
            <div
                        className={undefined}
            >
                        <WithStyles(ItemsListBase)
                                    count={undefined}
                                    itemToPrimary={[Function]}
                                    itemToSecondary={[Function]}
                                    items={undefined}
                                    loadItems={undefined}
                                    loaded={undefined}
                                    onClick={[Function]}
                                    title=""
                        />
            </div>
</WithStyles(Drawer)>,
          <div
            className={undefined}
>
            <div
                        className={undefined}
            >
                        <WithStyles(Typography)
                                    className={undefined}
                                    variant="title"
                        />
                        <WithStyles(Button)
                                    color="primary"
                                    onClick={[Function]}
                                    variant="contained"
                        >
                                    <pure(Save)
                                                className={undefined}
                                    />
                                    <FormattedMessage
                                                defaultMessage="Save"
                                                id="editor.save"
                                                values={Object {}}
                                    />
                        </WithStyles(Button)>
            </div>
            <DiagramWidget
                        actionStoppedFiring={[Function]}
                        allowCanvasTranslation={true}
                        allowCanvasZoom={true}
                        allowLooseLinks={true}
                        className={undefined}
                        deleteKeys={
                                    Array [
                                                46,
                                                8,
                                              ]
                        }
                        diagramEngine={
                                    DiagramEngine {
                                                "calculateMatrixDimensions": [Function],
                                                "canvas": null,
                                                "canvasMatrix": Array [],
                                                "diagramModel": DiagramModel {
                                                  "gridSize": 0,
                                                  "id": "2b29bdc6-ede2-4a45-b4e9-4c60c92ff7a1",
                                                  "links": Object {},
                                                  "listeners": Object {
                                                    "97361d77-59d4-4081-b3f8-791c290a96f6": Object {
                                                      "linksUpdated": [Function],
                                                    },
                                                    "df1260e5-f839-45ae-8652-b34c4d6f1dac": Object {
                                                      "nodesUpdated": [Function],
                                                    },
                                                  },
                                                  "locked": false,
                                                  "nodes": Object {},
                                                  "offsetX": 0,
                                                  "offsetY": 0,
                                                  "rendered": false,
                                                  "zoom": 100,
                                                },
                                                "hAdjustmentFactor": 0,
                                                "id": "90150074-b49e-4417-b3e1-a2886f3f3e4d",
                                                "labelFactories": Object {
                                                  "default": DefaultLabelFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "linkFactories": Object {
                                                  "default": DefaultLinkFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "linksThatHaveInitiallyRendered": Object {},
                                                "listeners": Object {},
                                                "locked": false,
                                                "markMatrixPoint": [Function],
                                                "markNodes": [Function],
                                                "markPorts": [Function],
                                                "nodeFactories": Object {
                                                  "default": DefaultNodeFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "nodesRendered": false,
                                                "paintableWidgets": null,
                                                "portFactories": Object {
                                                  "default": DefaultPortFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "routingMatrix": Array [],
                                                "vAdjustmentFactor": 0,
                                              }
                        }
                        inverseZoom={false}
                        maxNumberPointsPerLink={0}
                        smartRouting={false}
            />
</div>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <pure(Add) />,
            "className": undefined,
            "color": "primary",
            "onClick": [Function],
            "variant": "fab",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Error while saving pipeline; please try again (are you still logged in?)"
              id="pipeline.model.update.error"
              values={Object {}}
/>,
            "open": false,
            "variant": "error",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Error while saving pipeline; please try again (are you still logged in?)",
              "id": "pipeline.model.update.error",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Pipeline saved."
              id="pipeline.model.update.success"
              values={Object {}}
/>,
            "open": false,
            "variant": "success",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Pipeline saved.",
              "id": "pipeline.model.update.success",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "anchor": "right",
            "children": <div
              className={undefined}
>
              <div
                            className={undefined}
              >
                            <WithStyles(Typography)
                                          variant="title"
                            >
                                          <FormattedMessage
                                                        defaultMessage="Block settings"
                                                        id="pipeline.model.settings.title"
                                                        values={Object {}}
                                          />
                            </WithStyles(Typography)>
                            <br />
              </div>
</div>,
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className={undefined}
>
                <WithStyles(Typography)
                                variant="title"
                >
                                <FormattedMessage
                                                defaultMessage="Block settings"
                                                id="pipeline.model.settings.title"
                                                values={Object {}}
                                />
                </WithStyles(Typography)>
                <br />
</div>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(Typography)
                    variant="title"
>
                    <FormattedMessage
                                        defaultMessage="Block settings"
                                        id="pipeline.model.settings.title"
                                        values={Object {}}
                    />
</WithStyles(Typography)>,
                  <br />,
                  false,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <FormattedMessage
                      defaultMessage="Block settings"
                      id="pipeline.model.settings.title"
                      values={Object {}}
/>,
                    "variant": "title",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultMessage": "Block settings",
                      "id": "pipeline.model.settings.title",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                false,
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "anchor": "right",
            "children": <div
              className={undefined}
>
              <WithStyles(ItemsListBase)
                            count={undefined}
                            itemToPrimary={[Function]}
                            itemToSecondary={[Function]}
                            items={undefined}
                            loadItems={undefined}
                            loaded={undefined}
                            onClick={[Function]}
                            title=""
              />
</div>,
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(ItemsListBase)
                count={undefined}
                itemToPrimary={[Function]}
                itemToSecondary={[Function]}
                items={undefined}
                loadItems={undefined}
                loaded={undefined}
                onClick={[Function]}
                title=""
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "count": undefined,
                "itemToPrimary": [Function],
                "itemToSecondary": [Function],
                "items": undefined,
                "loadItems": undefined,
                "loaded": undefined,
                "onClick": [Function],
                "title": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className={undefined}
>
                <WithStyles(Typography)
                                className={undefined}
                                variant="title"
                />
                <WithStyles(Button)
                                color="primary"
                                onClick={[Function]}
                                variant="contained"
                >
                                <pure(Save)
                                                className={undefined}
                                />
                                <FormattedMessage
                                                defaultMessage="Save"
                                                id="editor.save"
                                                values={Object {}}
                                />
                </WithStyles(Button)>
</div>,
              <DiagramWidget
                actionStoppedFiring={[Function]}
                allowCanvasTranslation={true}
                allowCanvasZoom={true}
                allowLooseLinks={true}
                className={undefined}
                deleteKeys={
                                Array [
                                                46,
                                                8,
                                              ]
                }
                diagramEngine={
                                DiagramEngine {
                                                "calculateMatrixDimensions": [Function],
                                                "canvas": null,
                                                "canvasMatrix": Array [],
                                                "diagramModel": DiagramModel {
                                                  "gridSize": 0,
                                                  "id": "2b29bdc6-ede2-4a45-b4e9-4c60c92ff7a1",
                                                  "links": Object {},
                                                  "listeners": Object {
                                                    "97361d77-59d4-4081-b3f8-791c290a96f6": Object {
                                                      "linksUpdated": [Function],
                                                    },
                                                    "df1260e5-f839-45ae-8652-b34c4d6f1dac": Object {
                                                      "nodesUpdated": [Function],
                                                    },
                                                  },
                                                  "locked": false,
                                                  "nodes": Object {},
                                                  "offsetX": 0,
                                                  "offsetY": 0,
                                                  "rendered": false,
                                                  "zoom": 100,
                                                },
                                                "hAdjustmentFactor": 0,
                                                "id": "90150074-b49e-4417-b3e1-a2886f3f3e4d",
                                                "labelFactories": Object {
                                                  "default": DefaultLabelFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "linkFactories": Object {
                                                  "default": DefaultLinkFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "linksThatHaveInitiallyRendered": Object {},
                                                "listeners": Object {},
                                                "locked": false,
                                                "markMatrixPoint": [Function],
                                                "markNodes": [Function],
                                                "markPorts": [Function],
                                                "nodeFactories": Object {
                                                  "default": DefaultNodeFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "nodesRendered": false,
                                                "paintableWidgets": null,
                                                "portFactories": Object {
                                                  "default": DefaultPortFactory {
                                                    "type": "default",
                                                  },
                                                },
                                                "routingMatrix": Array [],
                                                "vAdjustmentFactor": 0,
                                              }
                }
                inverseZoom={false}
                maxNumberPointsPerLink={0}
                smartRouting={false}
/>,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(Typography)
                    className={undefined}
                    variant="title"
/>,
                  <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
                    variant="contained"
>
                    <pure(Save)
                                        className={undefined}
                    />
                    <FormattedMessage
                                        defaultMessage="Save"
                                        id="editor.save"
                                        values={Object {}}
                    />
</WithStyles(Button)>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": undefined,
                    "className": undefined,
                    "variant": "title",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <pure(Save)
                        className={undefined}
/>,
                      <FormattedMessage
                        defaultMessage="Save"
                        id="editor.save"
                        values={Object {}}
/>,
                    ],
                    "color": "primary",
                    "onClick": [Function],
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultMessage": "Save",
                        "id": "editor.save",
                        "values": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "actionStoppedFiring": [Function],
                "allowCanvasTranslation": true,
                "allowCanvasZoom": true,
                "allowLooseLinks": true,
                "className": undefined,
                "deleteKeys": Array [
                  46,
                  8,
                ],
                "diagramEngine": DiagramEngine {
                  "calculateMatrixDimensions": [Function],
                  "canvas": null,
                  "canvasMatrix": Array [],
                  "diagramModel": DiagramModel {
                    "gridSize": 0,
                    "id": "2b29bdc6-ede2-4a45-b4e9-4c60c92ff7a1",
                    "links": Object {},
                    "listeners": Object {
                      "97361d77-59d4-4081-b3f8-791c290a96f6": Object {
                        "linksUpdated": [Function],
                      },
                      "df1260e5-f839-45ae-8652-b34c4d6f1dac": Object {
                        "nodesUpdated": [Function],
                      },
                    },
                    "locked": false,
                    "nodes": Object {},
                    "offsetX": 0,
                    "offsetY": 0,
                    "rendered": false,
                    "zoom": 100,
                  },
                  "hAdjustmentFactor": 0,
                  "id": "90150074-b49e-4417-b3e1-a2886f3f3e4d",
                  "labelFactories": Object {
                    "default": DefaultLabelFactory {
                      "type": "default",
                    },
                  },
                  "linkFactories": Object {
                    "default": DefaultLinkFactory {
                      "type": "default",
                    },
                  },
                  "linksThatHaveInitiallyRendered": Object {},
                  "listeners": Object {},
                  "locked": false,
                  "markMatrixPoint": [Function],
                  "markNodes": [Function],
                  "markPorts": [Function],
                  "nodeFactories": Object {
                    "default": DefaultNodeFactory {
                      "type": "default",
                    },
                  },
                  "nodesRendered": false,
                  "paintableWidgets": null,
                  "portFactories": Object {
                    "default": DefaultPortFactory {
                      "type": "default",
                    },
                  },
                  "routingMatrix": Array [],
                  "vAdjustmentFactor": 0,
                },
                "inverseZoom": false,
                "maxNumberPointsPerLink": 0,
                "smartRouting": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
